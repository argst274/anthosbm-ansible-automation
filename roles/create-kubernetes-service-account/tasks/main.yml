# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

- name: Add KUBECONFIG Environment Variable to ".bashrc"
  ansible.builtin.lineinfile:
    path: "./.bashrc"
    regexp: "^export KUBECONFIG="
    line: "export KUBECONFIG=\"{{ bmctl_workspace_dir }}/{{ cluster_name }}/{{ cluster_name }}-kubeconfig\""

- name: Create a symbolic link in .kube config
  ansible.builtin.file:
    src: "{{ bmctl_workspace_dir }}/{{ cluster_name }}/{{ cluster_name }}-kubeconfig"
    dest: "./.kube/config"
    owner: "{{ login_user }}"
    group: "{{ login_user }}"
    state: link

- name: Create Kubernetes Service Account (KSA)
  kubernetes.core.k8s:
    state: present
    template: 'create-ksa.yaml'

- name: Create cloud-console-reader role
  kubernetes.core.k8s:
    state: present
    template: 'cloud-console-reader-role.yaml'

- name: Bind view & cloud-console-reader to KSA
  kubernetes.core.k8s:
    state: present
    template: 
      - 'cloud-console-reader-binding.yaml' 
      - 'cloud-console-view-binding.yaml'

- name: Obtain the bear token for KSA
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      SECRET_NAME=$(kubectl get serviceaccount {{ KSA_NAME }} \
      -o jsonpath='{$.secrets[0].name}') 

      kubectl get secret ${SECRET_NAME} \
      -o jsonpath='{$.data.token}' \
      | base64 --decode
  args:
    executable: /bin/bash
  register: create_token
  failed_when: false
  changed_when: false

- name: Output Google Cloud Anthos Authenticaion Token
  ansible.builtin.debug:
    msg: "{{ create_token.stdout_lines + create_token.stderr_lines }}"
  when:
    - create_token.stdout_lines is defined
    - create_token.stderr_lines is defined